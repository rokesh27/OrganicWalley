openapi: 3.0.0
info:
  version: 1.0.0
  title: ORGANIC PRODUCTS API
  description:  API to do CRUD on respective resource

servers:
  - url: http://localhost:9000/api/

tags:
  - name: products
    description: API to manage the products.
  - name: user
    description: API to manage the users.
  - name: address
    description: API to manage the Addresses  
paths:
  /user:
    get:
      summary: Lists all the users
      tags: [user]
      responses:
        "200":
          description: The list of users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    post:
      summary: Creates a user.
      tags: [user]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses: 
        '201':
          description: Created
    
  /user/{userID}:
    patch:
      summary: update the user.
      tags: [user]
      parameters:
        - name : userID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'    
      
      responses: 
        '201':
          description: Created
              
    get:
      summary: Returns a user by ID.
      tags: [user]
      parameters:
        - name: userID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    delete:
      summary: delete the user.
      tags: [user]
      parameters:
        - name: userID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses: 
        '201':
          description: Deleted
  /address:
    get:
      summary: Lists all the user Address
      tags: [address]
      responses:
        "200":
          description: The list of users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address'
    post:
      summary: Creates a user address.
      tags: [address]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses: 
        '201':
          description: Created
    
  /address/{AddressID}:
    patch:
      summary: update the user address.
      tags: [address]
      parameters:
        - name : AddressID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'    
      
      responses: 
        '201':
          description: Created
              
    get:
      summary: Returns a user address by ID.
      tags: [address]
      parameters:
        - name: AddressID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address'
    delete:
      summary: delete the user address.
      tags: [address]
      parameters:
        - name: AddressID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses: 
        '201':
          description: Deleted        
  /products:
    get:
      summary: Lists all the products
      tags: [products]
      responses:
        "200":
          description: The list of products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'
    post:
      summary: Creates a product.
      tags: [products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products'
      responses: 
        '201':
          description: Created
    
  /products/{productID}:
    patch:
      summary: update the product.
      tags: [products]
      parameters:
        - name : productID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products'    
      
      responses: 
        '201':
          description: Created
              
    get:
      summary: Returns a product by ID.
      tags: [products]
      parameters:
        - name: productID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'
    delete:
      summary: delete the product.
      tags: [products]
      parameters:
        - name: productID
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products'
      responses: 
        '201':
          description: Deleted            
components:
  schemas:
    user:
      type: object
      required:
        - Full_name
        - email
        - psw
      properties:
        id:
          type: integer
          description: The auto-generated id of the user.
        Full_name:
          type: string
          description: The name of the user.
        email:
          type: string
          description: The  email of the user
        psw:
          type: string
          description: The CGPA of the student
      example:
        Full_name: rokesh
        email: rok@gmail.com
        psw: rokesh@123
    products:
      type: object
      required:
        - Full_name
        - type
        - Qty
        - price
        - discount
        - desc
        - Image
      properties:
        id:
          type: integer
          description: The auto-generated id of the user.
        Full_name:
          type: string
          description: The name of the user.
        type:
          type: string
          description: The  email of the user
        Qty:
          type: integer
          description: The  email of the user
        price:
          type: integer
          description: The  email of the user
        discount:
          type: integer
          description: The  email of the user      
        desc:
          type: string
          description: The description:of the user
        Image:
          type: string
          description: The  email of the user  
      example:
        Full_name: Green apple
        type: fruits
        Qty: 123
        price: 100
        discount: 10
        desc:  fresh organic green apple
        Image: product image is shown here
    address:
      type: object
      required:
        - Full_name
        - Mobile
        - email
        - Pincode
        - comAdd
        - Town
        - District
        - State
      properties:
        id:
          type: integer
          description: The auto-generated id of the user.
        Full_name:
          type: string
          description: The name of the user.
        Mobile:
          type: string
          description: The  mobile number of the user
        email:
          type: string
          description: The  email of the user
        Pincode:
          type: integer
          description: The  Pincode of the user
        comAdd:
          type: string
          description: The  Address of the user      
        Town:
          type: string
          description: The Town of the user
        District:
          type: string
          description: The  district of the user
        State:
          type: string
          description: The  state of the user    
      example:
        Full_name: roki
        Mobile: 9381540744
        email: rok@gmail.com
        Pincode: 517502
        comAdd: tipt
        Town: agra
        District:  delhi
        State: delhi         